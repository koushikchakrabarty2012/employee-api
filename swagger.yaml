basePath: /
consumes:
- application/json
definitions:
  Address:
    description: Address defines the structure for an  employee address
    properties:
      pinCode:
        type: string
        x-go-name: Pin
      residingCity:
        type: string
        x-go-name: City
      stateCode:
        type: string
        x-go-name: State
    type: object
    x-go-package: employee-api/data
  Employee:
    description: Employee defines the structure for an  employee
    properties:
      Address:
        $ref: '#/definitions/Address'
      empFirstName:
        type: string
        x-go-name: FirstName
      empLastName:
        type: string
        x-go-name: LastName
      id:
        format: int64
        type: integer
        x-go-name: ID
      isManager:
        type: boolean
        x-go-name: Manager
    type: object
    x-go-package: employee-api/data
info:
  description: Documentation for Employee API
  title: of Employee API
  version: 1.0.0
paths:
  /emps:
    get:
      description: Return a list of employees from the database
      operationId: listEmployees
      responses:
        "200":
          $ref: '#/responses/employeesResponse'
      tags:
      - employees
    post:
      description: Create a new Employee
      operationId: createEmployee
      parameters:
      - description: |-
          Employee data structure to Update or Create.
          Note: the id field is ignored by update and create operations
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Employee'
      responses:
        "200":
          $ref: '#/responses/employeeResponse'
      tags:
      - employees
  /emps/{id}:
    delete:
      description: Delete a employee details
      operationId: deleteEmployee
      parameters:
      - description: The id of the product for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          $ref: '#/responses/employeeResponse'
      tags:
      - employees
    get:
      description: Return single employee from the database
      operationId: listSingleEmployee
      parameters:
      - description: The id of the product for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          $ref: '#/responses/employeeResponse'
      tags:
      - employees
    put:
      description: Update a employee details
      operationId: updateEmployee
      parameters:
      - description: |-
          Employee data structure to Update or Create.
          Note: the id field is ignored by update and create operations
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Employee'
      responses:
        "200":
          $ref: '#/responses/employeeResponse'
      tags:
      - employees
  /mgrs:
    get:
      description: Return a list of employees who are managers from the database
      operationId: listManagers
      responses:
        "200":
          $ref: '#/responses/managersResponse'
      tags:
      - employees
produces:
- application/json
responses:
  employeesResponse:
    description: A list of employees
    schema:
      items:
        $ref: '#/definitions/Employee'
      type: array
  managersResponse:
    description: A list of managers
    schema:
      items:
        $ref: '#/definitions/Employee'
      type: array
schemes:
- http
swagger: "2.0"
